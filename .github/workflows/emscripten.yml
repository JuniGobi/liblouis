name: Emscripten

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  js-build:
    name: Build liblouis for js

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # - name: Install dependencies
    #   run: sudo apt-get update -qq && sudo apt-get install -y clang-format-7
    - name: Obtain liblouis-js
      # Contains tests and js snippets appended to builds. liblouis-js
      # version should be incremented by hand, to keep the
      # repositories in sync.
      run: git clone https://github.com/liblouis/liblouis-js.git
    - name: Pull the docker image
      run: docker pull dolp/liblouis-js-build-travis:1.37.3-64bit

    - name: Run the docker image
      run: docker run --rm -v $(pwd):/src dolp/liblouis-js-build-travis:1.37.3-64bit /bin/bash  ".travis/script/emscripten-build.sh"

    - name: Move the build result to a better place
      run: |
        cp -r ./out/* ./liblouis-js/js-build
        cp -r ./out-emscripten-install/share/liblouis/tables ./liblouis-js/js-build/

    - name: Debug
      run: find ./liblouis-js

    - name: Echo phantomjs version
      run: phantomjs --version

    - name: Build and test the npm package
      # `npm link` exposes the newly build npm package to the test
      # runner. The `--production`-flag is necessary as it ensures
      # that no publicly published package of the build is downloaded
      # and tested instead.
      run: |
        cd ./liblouis-js
        sudo npm link js-build --production
        npm test
        cd ..

